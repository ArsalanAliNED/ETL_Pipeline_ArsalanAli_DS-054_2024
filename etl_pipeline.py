# -*- coding: utf-8 -*-
"""etl_pipeline.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RDgl9wJzxdUeDxAuStADveeayb18Dqud
"""

import pandas as pd
import numpy as np
import requests
from datetime import datetime
from io import StringIO
import gspread
from google.colab import auth
from google.auth import default
from pymongo import MongoClient
import json

exec(open("/content/drive/MyDrive/ETL_Pipeline_ArsalanAli_DS-054_2024/load_to_db.py").read())

print("Loading crop yield data from Google Drive...")

crop_df = pd.read_csv("/content/drive/MyDrive/ETL_Pipeline_ArsalanAli_DS-054_2024/data/crop_yield.csv")
crop_df.dropna(subset=['Production', 'Area Harvested'], inplace=True)
crop_df['Yield'] = crop_df['Production'] / crop_df['Area Harvested']
crop_df['Area Harvested'] = crop_df['Area Harvested'] * 2.47105
print("Fetching weather data from API...")
API_KEY = "62d0e891c9201678363e266c2e593a9d"
city = "Lahore"
weather_url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}"
weather_response = requests.get(weather_url)
try:
    weather_data = weather_response.json()
    weather_df = pd.DataFrame([{
        'City': city,
        'Temperature_C': weather_data['main']['temp'] - 273.15,
        'Humidity': weather_data['main']['humidity'],
        'Wind_Speed': weather_data['wind']['speed'],
        'Timestamp': datetime.utcfromtimestamp(weather_data['dt']).isoformat()
    }])
except (KeyError, ValueError, TypeError):
  print("Weather API failed, using mock data from file...")
  with open("/content/drive/MyDrive/ETL_Pipeline_ArsalanAli_DS-054_2024/data/sample_weather.json") as f:
    mock_weather = json.load(f)
    weather_df = pd.DataFrame([{
      'City': city,
      'Temperature_C': mock_weather['main']['temp'] - 273.15,
      'Humidity': mock_weather['main']['humidity'],
      'Wind_Speed': mock_weather['wind']['speed'],
      'Timestamp': datetime.utcnow().isoformat()
    }])
print("Reading data from Google Sheet: Crop_Field_Data.gsheet...")
auth.authenticate_user()
creds, _ = default()
gc = gspread.authorize(creds)
sheet = gc.open_by_url("https://docs.google.com/spreadsheets/d/1j7kd-6IN4NND5jDJR69JCVOXXyYqsCnTco9KJnCKm68").sheet1
data = sheet.get_all_records()
field_df = pd.DataFrame(data)
field_df['Irrigation'] = field_df['Irrigation'].map({'Yes': 1, 'No': 0})
field_df['Farming_Intensity'] = field_df[['Fertilizer Used (kg/ha)', 'Irrigation']].mean(axis=1)
print("Fetching satellite data from MongoDB...")
with open("/content/drive/MyDrive/ETL_Pipeline_ArsalanAli_DS-054_2024/config/db_config.json") as config_file:
  config = json.load(config_file)
mongo_uri = config["mongo_uri"]
client = MongoClient(mongo_uri)
db = client['agriculture']
collection = db['satellite_metrics']
satellite_data = list(collection.find())
satellite_df = pd.DataFrame(satellite_data)
satellite_df['Date'] = pd.to_datetime(satellite_df['Date']).dt.strftime('%Y-%m-%dT%H:%M:%SZ')
print("Getting commodity prices from API...")
price_url = "https://api.worldbank.org/v2/en/indicator/CP.CPI.FOOD?format=json"
price_resp = requests.get(price_url)
price_json = price_resp.json()
price_df = pd.DataFrame([{
    'Commodity': 'Wheat',
    'Price_USD': 300.0,
    'Date': datetime.now().isoformat()
}])
print("Merging and final processing...")
final_df = crop_df.merge(field_df, on='Region', how='left')
final_df = final_df.merge(satellite_df, on='Region', how='left')
final_df = final_df.merge(price_df, how='cross')
final_df = final_df.merge(weather_df, how='cross')
final_df['Weather_Impact_Score'] = (final_df['Temperature_C'] * 0.4 +
                                    final_df['Humidity'] * 0.3 -
                                    final_df['Wind_Speed'] * 0.3)
final_df['Profitability'] = final_df['Yield'] * final_df['Price_USD']
print("Saving final data to MongoDB...")
output_collection = db['final_aggregated_data']
output_collection.delete_many({})
final_df = final_df.drop(columns=['_id'], errors='ignore')
output_collection.insert_many(final_df.to_dict('records'))
print("Final data successfully saved to MongoDB!")

final_df.to_csv("/content/drive/MyDrive/ETL_Pipeline_ArsalanAli_DS-054_2024/output/final_cleaned_data.csv", index=False)
print("Final data also saved to final_cleaned_data.csv")
